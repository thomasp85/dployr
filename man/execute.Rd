% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exec.R
\name{execute}
\alias{execute}
\title{Execute a producethis project}
\usage{
execute()
}
\value{
This function is called for its side effects
}
\description{
This function assumes the current working directory is the root of a project
created according to producethis conventions. If this is the case it will
execute the project according to its type and the content in \code{./exec}
}
\details{
\subsection{Project categories}{

producethis/deployr recognises three main project types:
\itemize{
\item \code{static}: The project is executed and as a result produces one or more
files which will subsequently be made availabe
\item \code{dynamic}: The project is executed and as a result starts a web server with
dynamic content
\item \code{batch}: The project is executed and is afterwards considered "finished".
If information is generated it needs to be stored somewhere else.
}

Inside these categories are a range of types that maps to specific runtimes
or execution engines. The project type is given in the \code{Type} field of the
\code{DESCRIPTION} file
\subsection{static}{
\itemize{
\item \code{quarto}: Used for a single quarto document or a quarto project. Will use
\code{quarto::quarto_render()} to render the content of \verb{exec/}
\item \code{rmarkdown}: Used for a single RMarkdown document. Will use
\code{rmarkdown::render()} to render the \code{.Rmd} file in \verb{exec/}
\item \code{book} Used for a bookdown project. Will use \code{bookdown::render_book()} to
render the content of \verb{exec/}
\item \code{blog} Used for a blogdown project. Will use \code{blogdown::build_site()} to
render the content of \verb{exec/}
\item \code{site} Used for general Rmarkdown websites. Will use
\code{rmarkdown::render_site()} to render the content of \verb{exec/}
}
}

\subsection{dynamic}{
\itemize{
\item \code{shiny}: Used for a shiny app. Will use \code{shiny::shinyAppDir()} to create a
shiny app from \verb{exec/} and then launch it with \code{shiny::runApp()}
\item \code{plumber}: Used for a plumber API. Will use \code{plumber::plumb()} to create an
api from \verb{exec/} and launch it with \code{plumber::pr_run()}
\item \code{api}/\code{app}: Used for a generalized app or api. Will require a
\verb{_server.yml} file to specify how to launch it
\item \code{rmd_shiny}: Used for a shiny-backed Rmarkdown document. Will use
\code{rmarkdown::run()} to render and serve a dynamic document
\item \code{quarto_shiny}: Used for a shiny-backed Quarto document. Will use
\code{quarto::quarto_serve()} to render and serve a dynamic document.
}
}

\subsection{batch}{
\itemize{
\item \code{batch}: Batch project which will run each script in \verb{exec/} in turn and
then quit.
}
}

}
}
